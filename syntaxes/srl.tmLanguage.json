{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Structured Rule Language",
	"patterns": [
		{
			"include": "#functions"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#datatypes"
		},
		{
			"include": "#operators"
		}
	],
	"repository": {
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.srl",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\("
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.srl",
					"match": "//.*$"
				},
				{
					"name": "comment.block.srl",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.srl",
					"match": "\\b(if|else|while|for|return|then|it|association|from|equal|to|increment|by|in|starts|satisfies|at|least|such|that|each|catch|with|try|is|some|a|an|initially|do|fixed|array|of|as|later|earlier|than|ignoring|case)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.srl",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.srl",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.srl",
					"match": "\\b\\d+(\\.\\d+)?\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.language.null.srl",
					"match": "\\bnull\\b"
				},
				{
					"name": "constant.language.known.srl",
					"match": "\\bknown\\b"
				},
				{
					"name": "constant.language.unknown.srl",
					"match": "\\bunknown\\b"
				},
				{
					"name": "constant.language.available.srl",
					"match": "\\bavailable\\b"
				},
				{
					"name": "constant.language.unavailable.srl",
					"match": "\\bunavailable\\b"
				},
				{
					"name": "constant.language.boolean.true.srl",
					"match": "\\btrue\\b"
				},
				{
					"name": "constant.language.boolean.false.srl",
					"match": "\\bfalse\\b"
				},
				{
					"name": "constant.language.date.srl",
					"match": "'\\d{2}/\\d{2}/\\d{4}'"
				}
			]
		},
		"datatypes": {
			"patterns": [
				{
					"name": "storage.type.primitive.string.srl",
					"match": "\\bstring\\b"
				},
				{
					"name": "storage.type.primitive.integer.srl",
					"match": "\\binteger\\b"
				},
				{
					"name": "storage.type.primitive.real.srl",
					"match": "\\breal\\b"
				},
				{
					"name": "storage.type.primitive.date.srl",
					"match": "\\bdate\\b"
				},
				{
					"name": "storage.type.primitive.Date.srl",
					"match": "\\bDate\\b"
				},
				{
					"name": "storage.type.primitive.boolean.srl",
					"match": "\\bboolean\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.logical.srl",
					"match": "\\b(and|or|not)\\b"
				},
				{
					"name": "keyword.operator.comparison.srl",
					"match": "(<|<=|>|>=|==|!=|=|\\+|\\-|\\/|\\*)"
				}
			]
		}
	},
	"scopeName": "source.srl"
}